{
    "contents" : "#### Bayesian GLMM analysis\n\n#### Preliminaries\n#rm(list = ls())\nmy_packages<-c('data.table', 'snow', 'dclone', 'rjags', 'R2jags')\nlapply(my_packages, require, character.only=T)\n\n#setwd(\"C:/Users/Adam/Documents/GitHub/potato_psyllid_distribution_modeling/GLM\")\n\njagsGLMMdata <- readRDS(\"Data_JAGS_GLMM.rds\")\n\n################################################################################\n#### Binomial GLMM Model specification\nsink(\"climate_glmm_model.jags\")\ncat(\"\n    model {    \n    ## Priors\n    \n    # For the site random effect\n    for(j in 1:nsite) { \n      alpha[j] ~ dnorm(mu.alpha, tau.alpha) \n    }\n    mu.alpha ~ dnorm(0, 0.001)\n    tau.alpha <- 1 / (sigma.alpha * sigma.alpha)\n    sigma.alpha ~ dunif(0, 5)\n    \n    # Grand mean\n    mu ~ dnorm(0, 0.01)\n\n    # For the fixed effect coefficients\n    beta1 ~ dnorm(0, 0.001)\n    beta2 ~ dnorm(0, 0.001)\n    beta3 ~ dnorm(0, 0.001)\n    beta4 ~ dnorm(0, 0.001)\n    beta5 ~ dnorm(0, 0.001)\n    beta6 ~ dnorm(0, 0.001)\n    beta7 ~ dnorm(0, 0.001)\n    beta8 ~ dnorm(0, 0.001)\n\n    # Likelihood\n    for (i in 1:nlist){ # i = events (year-months)\n      for(j in 1:nsite) { # j = sites\n        detectionMatrix[i,j] ~ dbern(p[i,j])  # Distribution for random part\n        logit(p[i,j]) <- mu + beta1*year[i,j] + beta2*month[i,j] + beta3*pow(month[i,j],2) +\n                          beta4*list_length[i,j] + \n                          beta5*aet[i,j] + beta6*cwd[i,j] + beta7*tmn[i,j] + beta8*tmx[i,j] +\n\t\t\t  alpha[j]\n      } #j\n    } #i\n    }\",fill = TRUE)\nsink()\n\n#########################################################################################\n\n#### Specifications of JAGS run\n# Initial values\n# Specify initial values for mu.alpha, sigma.alpha, and beta1\ninits <- function() list(mu.alpha = runif(1, -3, 3),\n                         sigma.alpha = runif(1, 0, 5),\n                         mu = runif(1, -3, 3),\n\t\t\t beta1 = runif(1, -3, 3),\n                         beta2 = runif(1, -3, 3),\n                         beta3 = runif(1, -3, 3),\n                         beta4 = runif(1, -3, 3),\n                         beta5 = runif(1, -3, 3),\n                         beta6 = runif(1, -3, 3),\n                         beta7 = runif(1, -3, 3),\n                         beta8 = runif(1, -3, 3))\n# Monitored parameters\nparams <- c('mu', 'beta1', 'beta2', 'beta3', 'beta4', 'beta5', 'beta6', 'beta7', 'beta8', 'alpha')\n# MCMC specifications\nni=81000; nt=10; nc=3\n# for jags.parfit(), burn-in iterations = n.adapt + n.update\nn.adapt <- 500; n.update <- 500\nnb <- n.adapt + n.update\n\n\n#### Non-parallel jags()\n# glmmOutput <- jags(data = jagsTestdata, \n#                 inits = inits, \n#                 parameters.to.save = params, \n#                 model.file = \"climate_glmm_model.jags\", \n#                 n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, \n#                 working.directory = getwd())    \n\n\n#### Parallel JAGS\n# Make a SOCK cluster using snow\ncl <- makeCluster(3, type = \"SOCK\")\ndate()\n# Call to jags.parfit\nglmmOutput <- jags.parfit(cl, data = jagsGLMMdata,\n                            params = params,\n                            model = \"climate_glmm_model.jags\",\n                            inits = inits,\n                            n.adapt = n.adapt, n.update = n.update,\n                            n.iter = ni, thin = nt, n.chains = nc)\ndate()\nstopCluster(cl) # Close the cluster\n#### Compute statistics and save output\nsaveRDS(glmmOutput, file = \"climate_glmm_jags_out_full.rds\")\nglmmdctab <- dctable(glmmOutput)\nglmmResults <- data.frame(rbindlist(glmmdctab))\nrow.names(glmmResults) <- names(glmmdctab)\nsaveRDS(glmmResults, file = \"climate_glmm_jags_out_params.rds\")\nprint(\"SUCCESS!\")\n\n",
    "created" : 1460081004038.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3180102888",
    "id" : "FA0830BD",
    "lastKnownWriteTime" : 1459493845,
    "path" : "~/GitHub/potato_psyllid_distribution_modeling/R_analyses/Bayesian_glmm_analysis.R",
    "project_path" : "R_analyses/Bayesian_glmm_analysis.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}